Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Small function inlining results

Inlined total of 0 calls.

==============================================================================

Section Cross References

    system_nuc100series.o(i.SystemCoreClockUpdate) refers to uidiv.o(.text) for __aeabi_uidivmod
    system_nuc100series.o(i.SystemCoreClockUpdate) refers to system_nuc100series.o(.data) for .data
    startup_nuc100series.o(RESET) refers to startup_nuc100series.o(STACK) for __initial_sp
    startup_nuc100series.o(RESET) refers to startup_nuc100series.o(.text) for Reset_Handler
    startup_nuc100series.o(RESET) refers to main.o(i.UART02_IRQHandler) for UART02_IRQHandler
    startup_nuc100series.o(RESET) refers to main.o(i.ADC_IRQHandler) for ADC_IRQHandler
    startup_nuc100series.o(.text) refers to system_nuc100series.o(i.SystemInit) for SystemInit
    startup_nuc100series.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    clk.o(i.CLK_DisableCKO) refers to clk.o(i.CLK_DisableModuleClock) for CLK_DisableModuleClock
    clk.o(i.CLK_DisableModuleClock) refers to clk.o(.constdata) for .constdata
    clk.o(i.CLK_EnableCKO) refers to clk.o(i.CLK_EnableModuleClock) for CLK_EnableModuleClock
    clk.o(i.CLK_EnableCKO) refers to clk.o(i.CLK_SetModuleClock) for CLK_SetModuleClock
    clk.o(i.CLK_EnableModuleClock) refers to clk.o(.constdata) for .constdata
    clk.o(i.CLK_EnablePLL) refers to clk.o(i.CLK_WaitClockReady) for CLK_WaitClockReady
    clk.o(i.CLK_EnablePLL) refers to uidiv.o(.text) for __aeabi_uidivmod
    clk.o(i.CLK_GetCPUFreq) refers to system_nuc100series.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(i.CLK_GetCPUFreq) refers to system_nuc100series.o(.data) for SystemCoreClock
    clk.o(i.CLK_GetHCLKFreq) refers to system_nuc100series.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(i.CLK_GetHCLKFreq) refers to system_nuc100series.o(.data) for SystemCoreClock
    clk.o(i.CLK_GetPCLKFreq) refers to system_nuc100series.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(i.CLK_GetPCLKFreq) refers to system_nuc100series.o(.data) for SystemCoreClock
    clk.o(i.CLK_SetCoreClock) refers to clk.o(i.CLK_EnablePLL) for CLK_EnablePLL
    clk.o(i.CLK_SetCoreClock) refers to clk.o(i.CLK_SetHCLK) for CLK_SetHCLK
    clk.o(i.CLK_SetHCLK) refers to system_nuc100series.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(i.CLK_SetModuleClock) refers to clk.o(.constdata) for .constdata
    spi.o(i.CLK_GetPLLClockFreq) refers to uidiv.o(.text) for __aeabi_uidivmod
    spi.o(i.SPI_GetBusClock) refers to clk.o(i.CLK_GetHCLKFreq) for CLK_GetHCLKFreq
    spi.o(i.SPI_GetBusClock) refers to spi.o(i.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    spi.o(i.SPI_GetBusClock) refers to uidiv.o(.text) for __aeabi_uidivmod
    spi.o(i.SPI_Open) refers to clk.o(i.CLK_GetHCLKFreq) for CLK_GetHCLKFreq
    spi.o(i.SPI_Open) refers to spi.o(i.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    spi.o(i.SPI_Open) refers to uidiv.o(.text) for __aeabi_uidivmod
    spi.o(i.SPI_SetBusClock) refers to clk.o(i.CLK_GetHCLKFreq) for CLK_GetHCLKFreq
    spi.o(i.SPI_SetBusClock) refers to spi.o(i.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    spi.o(i.SPI_SetBusClock) refers to uidiv.o(.text) for __aeabi_uidivmod
    pwm.o(i.PWM_ConfigCaptureChannel) refers to memcpya.o(.text) for __aeabi_memcpy4
    pwm.o(i.PWM_ConfigCaptureChannel) refers to uidiv.o(.text) for __aeabi_uidivmod
    pwm.o(i.PWM_ConfigCaptureChannel) refers to system_nuc100series.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    pwm.o(i.PWM_ConfigCaptureChannel) refers to pwm.o(.constdata) for .constdata
    pwm.o(i.PWM_ConfigCaptureChannel) refers to system_nuc100series.o(.data) for SystemCoreClock
    pwm.o(i.PWM_ConfigOutputChannel) refers to memcpya.o(.text) for __aeabi_memcpy4
    pwm.o(i.PWM_ConfigOutputChannel) refers to uidiv.o(.text) for __aeabi_uidivmod
    pwm.o(i.PWM_ConfigOutputChannel) refers to system_nuc100series.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    pwm.o(i.PWM_ConfigOutputChannel) refers to pwm.o(.constdata) for .constdata
    pwm.o(i.PWM_ConfigOutputChannel) refers to system_nuc100series.o(.data) for SystemCoreClock
    uart.o(i.CLK_GetPLLClockFreq) refers to uidiv.o(.text) for __aeabi_uidivmod
    uart.o(i.UART_Open) refers to uart.o(i.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    uart.o(i.UART_Open) refers to uidiv.o(.text) for __aeabi_uidivmod
    uart.o(i.UART_Open) refers to uart.o(.constdata) for .constdata
    uart.o(i.UART_SelectIrDAMode) refers to uart.o(i.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    uart.o(i.UART_SelectIrDAMode) refers to uidiv.o(.text) for __aeabi_uidivmod
    uart.o(i.UART_SelectIrDAMode) refers to uart.o(.constdata) for .constdata
    uart.o(i.UART_SetLine_Config) refers to uart.o(i.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    uart.o(i.UART_SetLine_Config) refers to uidiv.o(.text) for __aeabi_uidivmod
    uart.o(i.UART_SetLine_Config) refers to uart.o(.constdata) for .constdata
    main.o(i.ADC_IRQHandler) refers to main.o(.data) for .data
    main.o(i.Init_ADC) refers to adc.o(i.ADC_Open) for ADC_Open
    main.o(i.Init_ADC) refers to adc.o(i.ADC_EnableInt) for ADC_EnableInt
    main.o(i.Init_UART0) refers to uart.o(i.UART_Open) for UART_Open
    main.o(i.UART02_IRQHandler) refers to main.o(.bss) for .bss
    main.o(i.UART02_IRQHandler) refers to main.o(.data) for .data
    main.o(i.main) refers to rand.o(.text) for srand
    main.o(i.main) refers to sys_init.o(i.SYS_Init) for SYS_Init
    main.o(i.main) refers to lcd.o(i.init_LCD) for init_LCD
    main.o(i.main) refers to lcd.o(i.clear_LCD) for clear_LCD
    main.o(i.main) refers to main.o(i.Init_ADC) for Init_ADC
    main.o(i.main) refers to pwm.o(i.PWM_EnableOutput) for PWM_EnableOutput
    main.o(i.main) refers to pwm.o(i.PWM_Start) for PWM_Start
    main.o(i.main) refers to main.o(i.Init_UART0) for Init_UART0
    main.o(i.main) refers to pwm.o(i.PWM_ConfigOutputChannel) for PWM_ConfigOutputChannel
    main.o(i.main) refers to uidiv.o(.text) for __aeabi_uidivmod
    main.o(i.main) refers to printf6.o(i.__0sprintf$6) for __2sprintf
    main.o(i.main) refers to uart.o(i.UART_Write) for UART_Write
    main.o(i.main) refers to lcd.o(i.draw_Bmp32x8) for draw_Bmp32x8
    main.o(i.main) refers to lcd.o(i.draw_Bmp8x8) for draw_Bmp8x8
    main.o(i.main) refers to pwm.o(i.PWM_DisableOutput) for PWM_DisableOutput
    main.o(i.main) refers to main.o(.data) for .data
    main.o(i.main) refers to main.o(.bss) for .bss
    main.o(i.main) refers to system_nuc100series.o(.data) for CyclesPerUs
    sys_init.o(i.SYS_Init) refers to clk.o(i.CLK_EnableXtalRC) for CLK_EnableXtalRC
    sys_init.o(i.SYS_Init) refers to clk.o(i.CLK_WaitClockReady) for CLK_WaitClockReady
    sys_init.o(i.SYS_Init) refers to clk.o(i.CLK_SetCoreClock) for CLK_SetCoreClock
    sys_init.o(i.SYS_Init) refers to clk.o(i.CLK_EnableModuleClock) for CLK_EnableModuleClock
    sys_init.o(i.SYS_Init) refers to clk.o(i.CLK_SetModuleClock) for CLK_SetModuleClock
    lcd.o(i.clear_LCD) refers to lcd.o(i.lcdSetAddr) for lcdSetAddr
    lcd.o(i.clear_LCD) refers to lcd.o(i.lcdWriteData) for lcdWriteData
    lcd.o(i.clear_LCD) refers to lcd.o(.bss) for .bss
    lcd.o(i.draw_Bmp120x8) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x16) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x24) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x32) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x40) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x48) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x64) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x8) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp32x16) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp32x32) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp32x48) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp32x64) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp32x8) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp64x64) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp8x16) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp8x8) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_LCD) refers to lcd.o(i.lcdSetAddr) for lcdSetAddr
    lcd.o(i.draw_LCD) refers to lcd.o(i.lcdWriteData) for lcdWriteData
    lcd.o(i.draw_Pixel) refers to lcd.o(i.lcdSetAddr) for lcdSetAddr
    lcd.o(i.draw_Pixel) refers to lcd.o(i.lcdWriteData) for lcdWriteData
    lcd.o(i.draw_Pixel) refers to lcd.o(.bss) for .bss
    lcd.o(i.init_LCD) refers to lcd.o(i.init_SPI3) for init_SPI3
    lcd.o(i.init_LCD) refers to lcd.o(i.lcdWriteCommand) for lcdWriteCommand
    lcd.o(i.init_SPI3) refers to spi.o(i.SPI_Open) for SPI_Open
    lcd.o(i.init_SPI3) refers to spi.o(i.SPI_DisableAutoSS) for SPI_DisableAutoSS
    lcd.o(i.printC) refers to lcd.o(i.lcdSetAddr) for lcdSetAddr
    lcd.o(i.printC) refers to lcd.o(i.lcdWriteData) for lcdWriteData
    lcd.o(i.printC) refers to lcd.o(.data) for .data
    lcd.o(i.printC_5x7) refers to lcd.o(i.lcdSetAddr) for lcdSetAddr
    lcd.o(i.printC_5x7) refers to lcd.o(i.lcdWriteData) for lcdWriteData
    lcd.o(i.printC_5x7) refers to lcd.o(.data) for .data
    lcd.o(i.printS) refers to lcd.o(i.printC) for printC
    lcd.o(i.printS) refers to strlen.o(.text) for strlen
    lcd.o(i.printS_5x7) refers to lcd.o(i.printC_5x7) for printC_5x7
    lcd.o(i.printS_5x7) refers to strlen.o(.text) for strlen
    lcd.o(i.print_Line) refers to lcd.o(i.printC) for printC
    lcd.o(i.print_Line) refers to strlen.o(.text) for strlen
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    rand.o(.text) refers to rand.o(.data) for .data
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_nuc100series.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_nuc100series.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    fputc.o(i.fputc) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc.o(i.fputc) refers (Special) to semi.o(.text) for __semihosting_library_function
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing system_nuc100series.o(.rev16_text), (4 bytes).
    Removing system_nuc100series.o(.revsh_text), (4 bytes).
    Removing startup_nuc100series.o(HEAP), (0 bytes).
    Removing clk.o(.rev16_text), (4 bytes).
    Removing clk.o(.revsh_text), (4 bytes).
    Removing clk.o(i.CLK_DisableCKO), (16 bytes).
    Removing clk.o(i.CLK_DisableModuleClock), (48 bytes).
    Removing clk.o(i.CLK_DisablePLL), (16 bytes).
    Removing clk.o(i.CLK_DisableSysTick), (12 bytes).
    Removing clk.o(i.CLK_DisableXtalRC), (16 bytes).
    Removing clk.o(i.CLK_EnableCKO), (40 bytes).
    Removing clk.o(i.CLK_EnableSysTick), (56 bytes).
    Removing clk.o(i.CLK_GetCPUFreq), (16 bytes).
    Removing clk.o(i.CLK_GetHXTFreq), (20 bytes).
    Removing clk.o(i.CLK_GetLXTFreq), (24 bytes).
    Removing clk.o(i.CLK_GetPCLKFreq), (16 bytes).
    Removing clk.o(i.CLK_Idle), (32 bytes).
    Removing clk.o(i.CLK_PowerDown), (36 bytes).
    Removing clk.o(i.CLK_SetSysTickClockSrc), (20 bytes).
    Removing sys.o(.rev16_text), (4 bytes).
    Removing sys.o(.revsh_text), (4 bytes).
    Removing sys.o(i.SYS_ClearResetSrc), (12 bytes).
    Removing sys.o(i.SYS_DisableBOD), (14 bytes).
    Removing sys.o(i.SYS_EnableBOD), (36 bytes).
    Removing sys.o(i.SYS_GetBODStatus), (12 bytes).
    Removing sys.o(i.SYS_GetResetSrc), (8 bytes).
    Removing sys.o(i.SYS_IsRegLocked), (16 bytes).
    Removing sys.o(i.SYS_ReadPDID), (8 bytes).
    Removing sys.o(i.SYS_ResetCPU), (14 bytes).
    Removing sys.o(i.SYS_ResetChip), (14 bytes).
    Removing sys.o(i.SYS_ResetModule), (26 bytes).
    Removing adc.o(.rev16_text), (4 bytes).
    Removing adc.o(.revsh_text), (4 bytes).
    Removing adc.o(i.ADC_Close), (10 bytes).
    Removing adc.o(i.ADC_DisableHWTrigger), (12 bytes).
    Removing adc.o(i.ADC_DisableInt), (36 bytes).
    Removing adc.o(i.ADC_EnableHWTrigger), (28 bytes).
    Removing spi.o(.rev16_text), (4 bytes).
    Removing spi.o(.revsh_text), (4 bytes).
    Removing spi.o(i.SPI_ClearIntFlag), (48 bytes).
    Removing spi.o(i.SPI_ClearRxFIFO), (10 bytes).
    Removing spi.o(i.SPI_ClearTxFIFO), (10 bytes).
    Removing spi.o(i.SPI_Close), (72 bytes).
    Removing spi.o(i.SPI_DisableFIFO), (12 bytes).
    Removing spi.o(i.SPI_DisableInt), (80 bytes).
    Removing spi.o(i.SPI_EnableAutoSS), (18 bytes).
    Removing spi.o(i.SPI_EnableFIFO), (30 bytes).
    Removing spi.o(i.SPI_EnableInt), (80 bytes).
    Removing spi.o(i.SPI_GetBusClock), (100 bytes).
    Removing spi.o(i.SPI_GetIntFlag), (88 bytes).
    Removing spi.o(i.SPI_GetStatus), (74 bytes).
    Removing spi.o(i.SPI_SetBusClock), (284 bytes).
    Removing pwm.o(.rev16_text), (4 bytes).
    Removing pwm.o(.revsh_text), (4 bytes).
    Removing pwm.o(i.PWM_ClearADCTriggerFlag), (10 bytes).
    Removing pwm.o(i.PWM_ClearCaptureIntFlag), (56 bytes).
    Removing pwm.o(i.PWM_ClearDutyIntFlag), (10 bytes).
    Removing pwm.o(i.PWM_ClearPeriodIntFlag), (8 bytes).
    Removing pwm.o(i.PWM_ConfigCaptureChannel), (316 bytes).
    Removing pwm.o(i.PWM_DisableADCTrigger), (14 bytes).
    Removing pwm.o(i.PWM_DisableCapture), (62 bytes).
    Removing pwm.o(i.PWM_DisableCaptureInt), (32 bytes).
    Removing pwm.o(i.PWM_DisableDeadZone), (14 bytes).
    Removing pwm.o(i.PWM_DisableDutyInt), (14 bytes).
    Removing pwm.o(i.PWM_DisablePeriodInt), (12 bytes).
    Removing pwm.o(i.PWM_EnableADCTrigger), (14 bytes).
    Removing pwm.o(i.PWM_EnableCapture), (64 bytes).
    Removing pwm.o(i.PWM_EnableCaptureInt), (28 bytes).
    Removing pwm.o(i.PWM_EnableDeadZone), (36 bytes).
    Removing pwm.o(i.PWM_EnableDutyInt), (14 bytes).
    Removing pwm.o(i.PWM_EnablePeriodInt), (28 bytes).
    Removing pwm.o(i.PWM_ForceStop), (38 bytes).
    Removing pwm.o(i.PWM_GetADCTriggerFlag), (16 bytes).
    Removing pwm.o(i.PWM_GetCaptureIntFlag), (34 bytes).
    Removing pwm.o(i.PWM_GetDutyIntFlag), (16 bytes).
    Removing pwm.o(i.PWM_GetPeriodIntFlag), (14 bytes).
    Removing pwm.o(i.PWM_Stop), (32 bytes).
    Removing uart.o(.rev16_text), (4 bytes).
    Removing uart.o(.revsh_text), (4 bytes).
    Removing uart.o(i.UART_ClearIntFlag), (56 bytes).
    Removing uart.o(i.UART_Close), (6 bytes).
    Removing uart.o(i.UART_DisableFlowCtrl), (12 bytes).
    Removing uart.o(i.UART_DisableInt), (48 bytes).
    Removing uart.o(i.UART_EnableFlowCtrl), (30 bytes).
    Removing uart.o(i.UART_EnableInt), (48 bytes).
    Removing uart.o(i.UART_Read), (44 bytes).
    Removing uart.o(i.UART_SelectIrDAMode), (132 bytes).
    Removing uart.o(i.UART_SelectLINMode), (24 bytes).
    Removing uart.o(i.UART_SelectRS485Mode), (32 bytes).
    Removing uart.o(i.UART_SetLine_Config), (128 bytes).
    Removing uart.o(i.UART_SetTimeoutCnt), (22 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing sys_init.o(.rev16_text), (4 bytes).
    Removing sys_init.o(.revsh_text), (4 bytes).
    Removing lcd.o(.rev16_text), (4 bytes).
    Removing lcd.o(.revsh_text), (4 bytes).
    Removing lcd.o(i.draw_Bmp120x8), (74 bytes).
    Removing lcd.o(i.draw_Bmp16x16), (102 bytes).
    Removing lcd.o(i.draw_Bmp16x24), (102 bytes).
    Removing lcd.o(i.draw_Bmp16x32), (102 bytes).
    Removing lcd.o(i.draw_Bmp16x40), (102 bytes).
    Removing lcd.o(i.draw_Bmp16x48), (102 bytes).
    Removing lcd.o(i.draw_Bmp16x64), (102 bytes).
    Removing lcd.o(i.draw_Bmp16x8), (74 bytes).
    Removing lcd.o(i.draw_Bmp32x16), (132 bytes).
    Removing lcd.o(i.draw_Bmp32x32), (132 bytes).
    Removing lcd.o(i.draw_Bmp32x48), (132 bytes).
    Removing lcd.o(i.draw_Bmp32x64), (132 bytes).
    Removing lcd.o(i.draw_Bmp64x64), (132 bytes).
    Removing lcd.o(i.draw_Bmp8x16), (124 bytes).
    Removing lcd.o(i.draw_LCD), (48 bytes).
    Removing lcd.o(i.printC), (92 bytes).
    Removing lcd.o(i.printC_5x7), (80 bytes).
    Removing lcd.o(i.printS), (42 bytes).
    Removing lcd.o(i.printS_5x7), (42 bytes).
    Removing lcd.o(i.print_Line), (36 bytes).
    Removing lcd.o(.data), (2000 bytes).
    Removing dadd.o(.text), (356 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (190 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

125 unused section(s) (total 8092 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_nuc100series.o(RESET)
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/microlib/stdio/semi.s            0x00000000   Number         0  semi.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stdlib/rand.c           0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusesemip.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ..\..\..\..\Library\Device\Nuvoton\NUC100Series\Source\ARM\startup_NUC100Series.s 0x00000000   Number         0  startup_nuc100series.o ABSOLUTE
    ..\..\..\..\Library\Device\Nuvoton\NUC100Series\Source\system_NUC100Series.c 0x00000000   Number         0  system_nuc100series.o ABSOLUTE
    ..\..\..\..\Library\Nu-LB-NUC140\Source\LCD.c 0x00000000   Number         0  lcd.o ABSOLUTE
    ..\..\..\..\Library\Nu-LB-NUC140\Source\SYS_init.c 0x00000000   Number         0  sys_init.o ABSOLUTE
    ..\..\..\..\Library\StdDriver\src\adc.c  0x00000000   Number         0  adc.o ABSOLUTE
    ..\..\..\..\Library\StdDriver\src\clk.c  0x00000000   Number         0  clk.o ABSOLUTE
    ..\..\..\..\Library\StdDriver\src\pwm.c  0x00000000   Number         0  pwm.o ABSOLUTE
    ..\..\..\..\Library\StdDriver\src\spi.c  0x00000000   Number         0  spi.o ABSOLUTE
    ..\..\..\..\Library\StdDriver\src\sys.c  0x00000000   Number         0  sys.o ABSOLUTE
    ..\..\..\..\Library\StdDriver\src\uart.c 0x00000000   Number         0  uart.o ABSOLUTE
    ..\\..\\..\\..\\Library\\Device\\Nuvoton\\NUC100Series\\Source\\system_NUC100Series.c 0x00000000   Number         0  system_nuc100series.o ABSOLUTE
    ..\\..\\..\\..\\Library\\Nu-LB-NUC140\\Source\\LCD.c 0x00000000   Number         0  lcd.o ABSOLUTE
    ..\\..\\..\\..\\Library\\Nu-LB-NUC140\\Source\\SYS_init.c 0x00000000   Number         0  sys_init.o ABSOLUTE
    ..\\..\\..\\..\\Library\\StdDriver\\src\\adc.c 0x00000000   Number         0  adc.o ABSOLUTE
    ..\\..\\..\\..\\Library\\StdDriver\\src\\clk.c 0x00000000   Number         0  clk.o ABSOLUTE
    ..\\..\\..\\..\\Library\\StdDriver\\src\\pwm.c 0x00000000   Number         0  pwm.o ABSOLUTE
    ..\\..\\..\\..\\Library\\StdDriver\\src\\spi.c 0x00000000   Number         0  spi.o ABSOLUTE
    ..\\..\\..\\..\\Library\\StdDriver\\src\\sys.c 0x00000000   Number         0  sys.o ABSOLUTE
    ..\\..\\..\\..\\Library\\StdDriver\\src\\uart.c 0x00000000   Number         0  uart.o ABSOLUTE
    ..\\main.c                               0x00000000   Number         0  main.o ABSOLUTE
    ..\main.c                                0x00000000   Number         0  main.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x000000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d4   Section       76  startup_nuc100series.o(.text)
    Default_Handler                          0x000000ff   Thumb Code     2  startup_nuc100series.o(.text)
    .text                                    0x00000120   Section        0  uidiv.o(.text)
    .text                                    0x0000014c   Section        0  rand.o(.text)
    .text                                    0x00000170   Section        0  memcpya.o(.text)
    .text                                    0x00000194   Section       36  init.o(.text)
    i.ADC_EnableInt                          0x000001b8   Section        0  adc.o(i.ADC_EnableInt)
    i.ADC_IRQHandler                         0x000001dc   Section        0  main.o(i.ADC_IRQHandler)
    i.ADC_Open                               0x000001fc   Section        0  adc.o(i.ADC_Open)
    i.CLK_EnableModuleClock                  0x0000021c   Section        0  clk.o(i.CLK_EnableModuleClock)
    i.CLK_EnablePLL                          0x0000024c   Section        0  clk.o(i.CLK_EnablePLL)
    i.CLK_EnableXtalRC                       0x000003e4   Section        0  clk.o(i.CLK_EnableXtalRC)
    i.CLK_GetHCLKFreq                        0x000003f4   Section        0  clk.o(i.CLK_GetHCLKFreq)
    i.CLK_GetPLLClockFreq                    0x00000404   Section        0  spi.o(i.CLK_GetPLLClockFreq)
    CLK_GetPLLClockFreq                      0x00000405   Thumb Code    70  spi.o(i.CLK_GetPLLClockFreq)
    i.CLK_GetPLLClockFreq                    0x0000045c   Section        0  uart.o(i.CLK_GetPLLClockFreq)
    CLK_GetPLLClockFreq                      0x0000045d   Thumb Code    70  uart.o(i.CLK_GetPLLClockFreq)
    i.CLK_SetCoreClock                       0x000004b4   Section        0  clk.o(i.CLK_SetCoreClock)
    i.CLK_SetHCLK                            0x0000052c   Section        0  clk.o(i.CLK_SetHCLK)
    i.CLK_SetModuleClock                     0x00000574   Section        0  clk.o(i.CLK_SetModuleClock)
    i.CLK_WaitClockReady                     0x00000640   Section        0  clk.o(i.CLK_WaitClockReady)
    i.Init_ADC                               0x0000066c   Section        0  main.o(i.Init_ADC)
    i.Init_UART0                             0x0000069c   Section        0  main.o(i.Init_UART0)
    i.PWM_ConfigOutputChannel                0x000006c4   Section        0  pwm.o(i.PWM_ConfigOutputChannel)
    i.PWM_DisableOutput                      0x00000820   Section        0  pwm.o(i.PWM_DisableOutput)
    i.PWM_EnableOutput                       0x00000828   Section        0  pwm.o(i.PWM_EnableOutput)
    i.PWM_Start                              0x00000830   Section        0  pwm.o(i.PWM_Start)
    i.SPI_DisableAutoSS                      0x00000856   Section        0  spi.o(i.SPI_DisableAutoSS)
    i.SPI_Open                               0x00000860   Section        0  spi.o(i.SPI_Open)
    i.SYS_Init                               0x000009cc   Section        0  sys_init.o(i.SYS_Init)
    i.SystemCoreClockUpdate                  0x00000aec   Section        0  system_nuc100series.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x00000b7c   Section        0  system_nuc100series.o(i.SystemInit)
    i.UART02_IRQHandler                      0x00000b80   Section        0  main.o(i.UART02_IRQHandler)
    i.UART_Open                              0x00000bec   Section        0  uart.o(i.UART_Open)
    i.UART_Write                             0x00000c74   Section        0  uart.o(i.UART_Write)
    i.__0sprintf$6                           0x00000ca0   Section        0  printf6.o(i.__0sprintf$6)
    i.__scatterload_copy                     0x00000cc8   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00000cd6   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00000cd8   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x00000ce8   Section        0  printf6.o(i._printf_core)
    _printf_core                             0x00000ce9   Thumb Code   768  printf6.o(i._printf_core)
    i._printf_post_padding                   0x00000fec   Section        0  printf6.o(i._printf_post_padding)
    _printf_post_padding                     0x00000fed   Thumb Code    32  printf6.o(i._printf_post_padding)
    i._printf_pre_padding                    0x0000100c   Section        0  printf6.o(i._printf_pre_padding)
    _printf_pre_padding                      0x0000100d   Thumb Code    44  printf6.o(i._printf_pre_padding)
    i._sputc                                 0x00001038   Section        0  printf6.o(i._sputc)
    _sputc                                   0x00001039   Thumb Code    10  printf6.o(i._sputc)
    i.clear_LCD                              0x00001044   Section        0  lcd.o(i.clear_LCD)
    i.draw_Bmp32x8                           0x00001098   Section        0  lcd.o(i.draw_Bmp32x8)
    i.draw_Bmp8x8                            0x000010e2   Section        0  lcd.o(i.draw_Bmp8x8)
    i.draw_Pixel                             0x0000112c   Section        0  lcd.o(i.draw_Pixel)
    i.init_LCD                               0x00001174   Section        0  lcd.o(i.init_LCD)
    i.init_SPI3                              0x0000119c   Section        0  lcd.o(i.init_SPI3)
    i.lcdSetAddr                             0x000011c0   Section        0  lcd.o(i.lcdSetAddr)
    i.lcdWriteCommand                        0x00001230   Section        0  lcd.o(i.lcdWriteCommand)
    i.lcdWriteData                           0x00001258   Section        0  lcd.o(i.lcdWriteData)
    i.main                                   0x00001284   Section        0  main.o(i.main)
    .constdata                               0x00001528   Section       56  clk.o(.constdata)
    .constdata                               0x00001560   Section      200  pwm.o(.constdata)
    .constdata                               0x00001628   Section       48  uart.o(.constdata)
    .data                                    0x20000000   Section       44  system_nuc100series.o(.data)
    .data                                    0x2000002c   Section       46  main.o(.data)
    .data                                    0x2000005c   Section        4  rand.o(.data)
    _rand_state                              0x2000005c   Data           4  rand.o(.data)
    .bss                                     0x20000060   Section      288  main.o(.bss)
    .bss                                     0x20000180   Section     1024  lcd.o(.bss)
    STACK                                    0x20000580   Section     1024  startup_nuc100series.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_nuc100series.o(RESET)
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x000000d5   Thumb Code    32  startup_nuc100series.o(.text)
    NMI_Handler                              0x000000f5   Thumb Code     2  startup_nuc100series.o(.text)
    HardFault_Handler                        0x000000f7   Thumb Code     2  startup_nuc100series.o(.text)
    SVC_Handler                              0x000000f9   Thumb Code     2  startup_nuc100series.o(.text)
    PendSV_Handler                           0x000000fb   Thumb Code     2  startup_nuc100series.o(.text)
    SysTick_Handler                          0x000000fd   Thumb Code     2  startup_nuc100series.o(.text)
    ACMP_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    BOD_IRQHandler                           0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    CAN0_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    CAN1_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    EINT0_IRQHandler                         0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    EINT1_IRQHandler                         0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    GPAB_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    GPCDEF_IRQHandler                        0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    I2C0_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    I2C1_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    I2S_IRQHandler                           0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    PDMA_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    PS2_IRQHandler                           0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    PWMA_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    PWMB_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    PWRWU_IRQHandler                         0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    RTC_IRQHandler                           0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    SC012_IRQHandler                         0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    SPI0_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    SPI1_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    SPI2_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    SPI3_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    TMR0_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    TMR1_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    TMR2_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    TMR3_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    UART1_IRQHandler                         0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    USBD_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    WDT_IRQHandler                           0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    __aeabi_uidiv                            0x00000121   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00000121   Thumb Code    44  uidiv.o(.text)
    rand                                     0x0000014d   Thumb Code    18  rand.o(.text)
    srand                                    0x0000015f   Thumb Code     6  rand.o(.text)
    __aeabi_memcpy                           0x00000171   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x00000171   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x00000171   Thumb Code     0  memcpya.o(.text)
    __scatterload                            0x00000195   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000195   Thumb Code     0  init.o(.text)
    ADC_EnableInt                            0x000001b9   Thumb Code    36  adc.o(i.ADC_EnableInt)
    ADC_IRQHandler                           0x000001dd   Thumb Code    22  main.o(i.ADC_IRQHandler)
    ADC_Open                                 0x000001fd   Thumb Code    26  adc.o(i.ADC_Open)
    CLK_EnableModuleClock                    0x0000021d   Thumb Code    40  clk.o(i.CLK_EnableModuleClock)
    CLK_EnablePLL                            0x0000024d   Thumb Code   348  clk.o(i.CLK_EnablePLL)
    CLK_EnableXtalRC                         0x000003e5   Thumb Code    10  clk.o(i.CLK_EnableXtalRC)
    CLK_GetHCLKFreq                          0x000003f5   Thumb Code    12  clk.o(i.CLK_GetHCLKFreq)
    CLK_SetCoreClock                         0x000004b5   Thumb Code   112  clk.o(i.CLK_SetCoreClock)
    CLK_SetHCLK                              0x0000052d   Thumb Code    66  clk.o(i.CLK_SetHCLK)
    CLK_SetModuleClock                       0x00000575   Thumb Code   180  clk.o(i.CLK_SetModuleClock)
    CLK_WaitClockReady                       0x00000641   Thumb Code    34  clk.o(i.CLK_WaitClockReady)
    Init_ADC                                 0x0000066d   Thumb Code    40  main.o(i.Init_ADC)
    Init_UART0                               0x0000069d   Thumb Code    30  main.o(i.Init_UART0)
    PWM_ConfigOutputChannel                  0x000006c5   Thumb Code   328  pwm.o(i.PWM_ConfigOutputChannel)
    PWM_DisableOutput                        0x00000821   Thumb Code     8  pwm.o(i.PWM_DisableOutput)
    PWM_EnableOutput                         0x00000829   Thumb Code     8  pwm.o(i.PWM_EnableOutput)
    PWM_Start                                0x00000831   Thumb Code    38  pwm.o(i.PWM_Start)
    SPI_DisableAutoSS                        0x00000857   Thumb Code    10  spi.o(i.SPI_DisableAutoSS)
    SPI_Open                                 0x00000861   Thumb Code   348  spi.o(i.SPI_Open)
    SYS_Init                                 0x000009cd   Thumb Code   256  sys_init.o(i.SYS_Init)
    SystemCoreClockUpdate                    0x00000aed   Thumb Code   118  system_nuc100series.o(i.SystemCoreClockUpdate)
    SystemInit                               0x00000b7d   Thumb Code     2  system_nuc100series.o(i.SystemInit)
    UART02_IRQHandler                        0x00000b81   Thumb Code    94  main.o(i.UART02_IRQHandler)
    UART_Open                                0x00000bed   Thumb Code   120  uart.o(i.UART_Open)
    UART_Write                               0x00000c75   Thumb Code    44  uart.o(i.UART_Write)
    __0sprintf$6                             0x00000ca1   Thumb Code    36  printf6.o(i.__0sprintf$6)
    __1sprintf$6                             0x00000ca1   Thumb Code     0  printf6.o(i.__0sprintf$6)
    __2sprintf                               0x00000ca1   Thumb Code     0  printf6.o(i.__0sprintf$6)
    __scatterload_copy                       0x00000cc9   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00000cd7   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00000cd9   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    clear_LCD                                0x00001045   Thumb Code    78  lcd.o(i.clear_LCD)
    draw_Bmp32x8                             0x00001099   Thumb Code    74  lcd.o(i.draw_Bmp32x8)
    draw_Bmp8x8                              0x000010e3   Thumb Code    74  lcd.o(i.draw_Bmp8x8)
    draw_Pixel                               0x0000112d   Thumb Code    66  lcd.o(i.draw_Pixel)
    init_LCD                                 0x00001175   Thumb Code    38  lcd.o(i.init_LCD)
    init_SPI3                                0x0000119d   Thumb Code    28  lcd.o(i.init_SPI3)
    lcdSetAddr                               0x000011c1   Thumb Code   106  lcd.o(i.lcdSetAddr)
    lcdWriteCommand                          0x00001231   Thumb Code    36  lcd.o(i.lcdWriteCommand)
    lcdWriteData                             0x00001259   Thumb Code    40  lcd.o(i.lcdWriteData)
    main                                     0x00001285   Thumb Code   616  main.o(i.main)
    Region$$Table$$Base                      0x00001658   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00001678   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_nuc100series.o(.data)
    CyclesPerUs                              0x20000004   Data           4  system_nuc100series.o(.data)
    PllClock                                 0x20000008   Data           4  system_nuc100series.o(.data)
    gau32ClkSrcTbl                           0x2000000c   Data          32  system_nuc100series.o(.data)
    x                                        0x2000002c   Data           1  main.o(.data)
    y                                        0x2000002d   Data           1  main.o(.data)
    r                                        0x2000002e   Data           1  main.o(.data)
    comRbytes                                0x2000002f   Data           1  main.o(.data)
    RX_Flag                                  0x20000030   Data           1  main.o(.data)
    u8ADF                                    0x20000031   Data           1  main.o(.data)
    ball                                     0x20000032   Data           8  main.o(.data)
    racket                                   0x2000003a   Data          32  main.o(.data)
    writing                                  0x20000060   Data          16  main.o(.bss)
    reading                                  0x20000070   Data          16  main.o(.bss)
    comRbuf                                  0x20000080   Data         256  main.o(.bss)
    DisplayBuffer                            0x20000180   Data        1024  lcd.o(.bss)
    __initial_sp                             0x20000980   Data           0  startup_nuc100series.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000d5

  Load Region LR_1 (Base: 0x00000000, Size: 0x000016d8, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00001678, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          114    RESET               startup_nuc100series.o
    0x000000c0   0x000000c0   0x00000000   Code   RO         1153  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO         1426    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO         1429    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         1431    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         1433    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO         1434    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         1436    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         1438    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO         1427    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d4   0x000000d4   0x0000004c   Code   RO          115  * .text               startup_nuc100series.o
    0x00000120   0x00000120   0x0000002c   Code   RO         1154    .text               mc_p.l(uidiv.o)
    0x0000014c   0x0000014c   0x00000024   Code   RO         1156    .text               mc_p.l(rand.o)
    0x00000170   0x00000170   0x00000024   Code   RO         1159    .text               mc_p.l(memcpya.o)
    0x00000194   0x00000194   0x00000024   Code   RO         1456    .text               mc_p.l(init.o)
    0x000001b8   0x000001b8   0x00000024   Code   RO          353    i.ADC_EnableInt     adc.o
    0x000001dc   0x000001dc   0x00000020   Code   RO          817    i.ADC_IRQHandler    main.o
    0x000001fc   0x000001fc   0x00000020   Code   RO          354    i.ADC_Open          adc.o
    0x0000021c   0x0000021c   0x00000030   Code   RO          127    i.CLK_EnableModuleClock  clk.o
    0x0000024c   0x0000024c   0x00000198   Code   RO          128    i.CLK_EnablePLL     clk.o
    0x000003e4   0x000003e4   0x00000010   Code   RO          130    i.CLK_EnableXtalRC  clk.o
    0x000003f4   0x000003f4   0x00000010   Code   RO          132    i.CLK_GetHCLKFreq   clk.o
    0x00000404   0x00000404   0x00000058   Code   RO          399    i.CLK_GetPLLClockFreq  spi.o
    0x0000045c   0x0000045c   0x00000058   Code   RO          688    i.CLK_GetPLLClockFreq  uart.o
    0x000004b4   0x000004b4   0x00000078   Code   RO          138    i.CLK_SetCoreClock  clk.o
    0x0000052c   0x0000052c   0x00000048   Code   RO          139    i.CLK_SetHCLK       clk.o
    0x00000574   0x00000574   0x000000cc   Code   RO          140    i.CLK_SetModuleClock  clk.o
    0x00000640   0x00000640   0x0000002c   Code   RO          142    i.CLK_WaitClockReady  clk.o
    0x0000066c   0x0000066c   0x00000030   Code   RO          818    i.Init_ADC          main.o
    0x0000069c   0x0000069c   0x00000028   Code   RO          819    i.Init_UART0        main.o
    0x000006c4   0x000006c4   0x0000015c   Code   RO          516    i.PWM_ConfigOutputChannel  pwm.o
    0x00000820   0x00000820   0x00000008   Code   RO          522    i.PWM_DisableOutput  pwm.o
    0x00000828   0x00000828   0x00000008   Code   RO          529    i.PWM_EnableOutput  pwm.o
    0x00000830   0x00000830   0x00000026   Code   RO          536    i.PWM_Start         pwm.o
    0x00000856   0x00000856   0x0000000a   Code   RO          404    i.SPI_DisableAutoSS  spi.o
    0x00000860   0x00000860   0x0000016c   Code   RO          413    i.SPI_Open          spi.o
    0x000009cc   0x000009cc   0x00000120   Code   RO          929    i.SYS_Init          sys_init.o
    0x00000aec   0x00000aec   0x00000090   Code   RO            3    i.SystemCoreClockUpdate  system_nuc100series.o
    0x00000b7c   0x00000b7c   0x00000002   Code   RO            4    i.SystemInit        system_nuc100series.o
    0x00000b7e   0x00000b7e   0x00000002   PAD
    0x00000b80   0x00000b80   0x0000006c   Code   RO          820    i.UART02_IRQHandler  main.o
    0x00000bec   0x00000bec   0x00000088   Code   RO          695    i.UART_Open         uart.o
    0x00000c74   0x00000c74   0x0000002c   Code   RO          702    i.UART_Write        uart.o
    0x00000ca0   0x00000ca0   0x00000028   Code   RO         1322    i.__0sprintf$6      mc_p.l(printf6.o)
    0x00000cc8   0x00000cc8   0x0000000e   Code   RO         1472    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00000cd6   0x00000cd6   0x00000002   Code   RO         1473    i.__scatterload_null  mc_p.l(handlers.o)
    0x00000cd8   0x00000cd8   0x0000000e   Code   RO         1474    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00000ce6   0x00000ce6   0x00000002   PAD
    0x00000ce8   0x00000ce8   0x00000304   Code   RO         1327    i._printf_core      mc_p.l(printf6.o)
    0x00000fec   0x00000fec   0x00000020   Code   RO         1328    i._printf_post_padding  mc_p.l(printf6.o)
    0x0000100c   0x0000100c   0x0000002c   Code   RO         1329    i._printf_pre_padding  mc_p.l(printf6.o)
    0x00001038   0x00001038   0x0000000a   Code   RO         1331    i._sputc            mc_p.l(printf6.o)
    0x00001042   0x00001042   0x00000002   PAD
    0x00001044   0x00001044   0x00000054   Code   RO          958    i.clear_LCD         lcd.o
    0x00001098   0x00001098   0x0000004a   Code   RO          971    i.draw_Bmp32x8      lcd.o
    0x000010e2   0x000010e2   0x0000004a   Code   RO          974    i.draw_Bmp8x8       lcd.o
    0x0000112c   0x0000112c   0x00000048   Code   RO          976    i.draw_Pixel        lcd.o
    0x00001174   0x00001174   0x00000026   Code   RO          977    i.init_LCD          lcd.o
    0x0000119a   0x0000119a   0x00000002   PAD
    0x0000119c   0x0000119c   0x00000024   Code   RO          978    i.init_SPI3         lcd.o
    0x000011c0   0x000011c0   0x00000070   Code   RO          979    i.lcdSetAddr        lcd.o
    0x00001230   0x00001230   0x00000028   Code   RO          980    i.lcdWriteCommand   lcd.o
    0x00001258   0x00001258   0x0000002c   Code   RO          981    i.lcdWriteData      lcd.o
    0x00001284   0x00001284   0x000002a4   Code   RO          821    i.main              main.o
    0x00001528   0x00001528   0x00000038   Data   RO          143    .constdata          clk.o
    0x00001560   0x00001560   0x000000c8   Data   RO          538    .constdata          pwm.o
    0x00001628   0x00001628   0x00000030   Data   RO          703    .constdata          uart.o
    0x00001658   0x00001658   0x00000020   Data   RO         1470    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00001678, Size: 0x00000060, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001678   0x0000002c   Data   RW            5    .data               system_nuc100series.o
    0x2000002c   0x000016a4   0x0000002e   Data   RW          823    .data               main.o
    0x2000005a   0x000016d2   0x00000002   PAD
    0x2000005c   0x000016d4   0x00000004   Data   RW         1157    .data               mc_p.l(rand.o)


    Execution Region ER_ZI (Exec base: 0x20000060, Load base: 0x000016d8, Size: 0x00000920, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000060        -       0x00000120   Zero   RW          822    .bss                main.o
    0x20000180        -       0x00000400   Zero   RW          987    .bss                lcd.o
    0x20000580        -       0x00000400   Zero   RW          112    STACK               startup_nuc100series.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        68          6          0          0          0       1639   adc.o
       928        126         56          0          0       6900   clk.o
       574         34          0          0       1024       8092   lcd.o
       904        102          0         46        288     121716   main.o
       402         20        200          0          0       3601   pwm.o
       462         34          0          0          0       3071   spi.o
        76         32        192          0       1024        764   startup_nuc100series.o
       288         32          0          0          0      35279   sys_init.o
       146         26          0         44          0     118255   system_nuc100series.o
       268         34         48          0          0      95013   uart.o

    ----------------------------------------------------------------------
      4120        446        528         92       2336     394330   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         4          0          0          2          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        36          0          0          0          0         60   memcpya.o
       898          8          0          0          0        384   printf6.o
        36         12          0          4          0        120   rand.o
        44          0          0          0          0         72   uidiv.o

    ----------------------------------------------------------------------
      1104         36          0          4          0        704   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1100         36          0          4          0        704   mc_p.l

    ----------------------------------------------------------------------
      1104         36          0          4          0        704   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      5224        482        528         96       2336     393382   Grand Totals
      5224        482        528         96       2336     393382   ELF Image Totals
      5224        482        528         96          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 5752 (   5.62kB)
    Total RW  Size (RW Data + ZI Data)              2432 (   2.38kB)
    Total ROM Size (Code + RO Data + RW Data)       5848 (   5.71kB)

==============================================================================

